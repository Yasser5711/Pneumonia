name: üöÄ Deploy Production (Client + Server)

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  deployments: write
  statuses: write

jobs:
  deploy-server:
    name: üöÄ Deploy Backend to Render (Production)
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üîë Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME_PROD }}
          password: ${{ secrets.DOCKER_PASSWORD_PROD }}

      - name: üõ†Ô∏è Enable BuildKit
        run: echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      - name: üõ†Ô∏è Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME_PROD }}/pneumoniacnn-prod:${{ github.sha }} -f server/Dockerfile .

      - name: üöÄ Push Docker image
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME_PROD }}/pneumoniacnn-prod:${{ github.sha }} ${{ secrets.DOCKER_USERNAME_PROD }}/pneumoniacnn-prod:latest
          docker push ${{ secrets.DOCKER_USERNAME_PROD }}/pneumoniacnn-prod:latest

      - name: üì§ Trigger Render Deploy Hook
        run: |
          echo "Deploying backend via Render hook..."
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_PROD }}"

  deploy-client:
    name: üöÄ Deploy Frontend to Netlify (Production)
    runs-on: ubuntu-latest
    needs: deploy-server
    defaults:
      run:
        working-directory: client

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üß∞ Setup Node + Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ Install Frontend Deps
        run: yarn install
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL_PROD }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY_PROD }}

      - name: üõ†Ô∏è Build Client
        run: yarn build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL_PROD }}
          VITE_API_KEY: ${{ secrets.VITE_API_KEY_PROD }}

      - name: üöÄ Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: "client/dist"
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Production deploy from GitHub Actions"
          netlify-config-path: "./netlify.toml"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN_PROD }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PROD_SITE_ID }}

      - name: üìà Auto Bump Root Version (patch)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Bump patch version at root
          yarn version --patch --no-git-tag-version

          git add package.json yarn.lock || true
          git commit -m "chore(release): bump version [skip ci]"
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üöÄ Create Release Tag
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Tagging production deploy with v$VERSION"

          git tag v$VERSION
          git push origin v$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.ref_name }}
          name: Production Release - v${{ github.ref_name }}
          body: |
            üöÄ Production deployment done at v${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
