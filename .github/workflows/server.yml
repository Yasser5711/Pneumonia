name: 🧩 Backend CI (Server)

on:
  pull_request:
    paths:
      - "server/**"

permissions:
  contents: read
  pull-requests: write

jobs:
  # install:
  #   name: 📦 Install Dependencies
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: 🧰 Enable Corepack
  #       run: corepack enable

  #     - name: 📦 Set up Node + Yarn
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: "yarn"

  #     - name: 📦 Install deps (Yarn 4)
  #       working-directory: server
  #       run: yarn install --immutable

  #     - name: ♻️ Cache Yarn install files
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           server/.yarn/cache
  #           server/.yarn/install-state.gz
  #         key: yarn-v4-${{ hashFiles('server/yarn.lock') }}

  lint:
    name: 🧼 Lint Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-yarn
        with:
          working-directory: server

      - name: 🧼 Run ESLint & Prettier
        working-directory: server
        run: yarn check:lint

  typecheck:
    name: 🧠 Type Check
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-yarn
        with:
          working-directory: server

      - name: 🧠 Run TS Check
        working-directory: server
        run: yarn check:types

  knip:
    name: 🪓 Check Unused Code (knip + ts-prune)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-yarn
        with:
          working-directory: server

      - name: 🪓 Run Knip
        working-directory: server
        run: yarn check:knip

      - name: 🔍 Run ts-prune
        working-directory: server
        run: yarn check:prune

  depcheck:
    name: 📦 Check Unused Dependencies
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-yarn
        with:
          working-directory: server

      - name: 📦 Run depcheck
        working-directory: server
        run: yarn check:dep
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: [lint, typecheck, knip, depcheck]
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-yarn
        with:
          working-directory: server

      - name: 🧪 Run Tests
        working-directory: server
        run: yarn check:test

      - name: 📊 Check coverage threshold
        working-directory: server
        run: |
          THRESHOLD=75
          COVERAGE_FILE="coverage/coverage-summary.json"

          if [ ! -f "$COVERAGE_FILE" ]; then
            echo "❌ Coverage file not found: $COVERAGE_FILE"
            exit 1
          fi

          COVERAGE=$(jq -r '.total.lines.pct' "$COVERAGE_FILE" | cut -d'.' -f1)
          echo "✅ Code coverage: ${COVERAGE}%"

          if [ "$COVERAGE" -lt "$THRESHOLD" ]; then
            echo "❌ Coverage below threshold (${THRESHOLD}%). Failing."
            exit 1
          fi
        shell: bash

      - name: 📈 Report Coverage
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          name: "Server Coverage Report"
          json-summary-path: server/coverage/coverage-summary.json
          json-summary-compare-path: server/coverage/coverage-summary.json
          json-final-path: server/coverage/coverage-final.json
          vite-config-path: server/vitest.config.ts
          github-token: ${{ secrets.GITHUB_TOKEN }}
