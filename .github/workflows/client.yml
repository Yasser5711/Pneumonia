name: 🎨 Frontend CI (Client)

on:
  pull_request:
    paths:
      - "client/**"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  pull-requests: write
  deployments: write
  statuses: write

env:
  TURBO_CACHE: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) && 'local:,remote:r' || 'local:,remote:rw' }}
  TURBO_TELEMETRY_DISABLED: "1"
jobs:
  lint:
    name: 🧼 Lint Code + CSS
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: 🧼 Run ESLint, Prettier, Stylelint
        run: yarn turbo run client#check:lint --cache="${{env.TURBO_CACHE}}"

  typecheck:
    name: 🧠 Type Check
    runs-on: ubuntu-latest

    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: 🧠 Run Type Check
        run: yarn turbo run client#check:types --cache="${{env.TURBO_CACHE}}"

  build:
    name: 🏗️ Build Project

    runs-on: ubuntu-latest

    needs: typecheck
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: 🏗️ Build Frontend
        run: yarn turbo run client#check:build --cache="${{env.TURBO_CACHE}}"

  pwa:
    name: ⚙️ PWA Check

    runs-on: ubuntu-latest

    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: ⚙️ Run PWA Build Check
        run: yarn turbo run client#check:pwa --cache="${{env.TURBO_CACHE}}"

  knip:
    name: ✂️ Unused Code (Knip + ts-prune)

    runs-on: ubuntu-latest

    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: ✂️ Run Knip
        run: yarn turbo run client#check:knip --cache="${{env.TURBO_CACHE}}"

      - name: 🌿 Run ts-prune
        run: yarn turbo run client#check:prune --cache="${{env.TURBO_CACHE}}"

  depcheck:
    name: 📦 Dependency Check

    runs-on: ubuntu-latest

    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn
      - uses: ./.github/actions/setup-turbo
        with:
          token: ${{ secrets.TURBO_TOKEN }}
          team: ${{ secrets.TURBO_TEAM }}
      - name: 📦 Run depcheck
        run: yarn turbo run client#check:dep --cache="${{env.TURBO_CACHE}}"

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    needs: [lint, typecheck, knip, depcheck]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: ./.github/actions/setup-yarn

      - name: 🧪 Run Vitest + Coverage
        run: yarn turbo run client#check:test

      # - name: 📊 ReportGenerator
      #   uses: danielpalme/ReportGenerator-GitHub-Action@5.4.5
      #   with:
      #     reports: client/coverage/lcov.info
      #     targetdir: client/coverage/report
      #     reporttypes: Html_Dark;lcov;XML;JsonSummary;Badges
      #     sourcedirs: client
      #     title: Client Coverage Report
      # - name: 📈 Upload coverage report artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: client-coverage-report
      #     path: client/coverage/report/
      - name: "Report Coverage"
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          working-directory: client
          name: Client Coverage Report
  deploy-to-staging:
    name: 🚀 Deploy to Staging
    needs: [test, pwa]
    if: ${{ success() && github.event_name == 'pull_request' }}
    uses: ./.github/workflows/deploy-client-staging.yml
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      environment: staging
    secrets: inherit
