name: üöÄ Publish Release (after PR merge)

on:
  pull_request:
    types: [closed]
    branches: [master]

permissions:
  contents: write

jobs:
  publish:
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.title, 'chore(release): bump version')
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîß Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üìñ Read version from root package.json
        id: v
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

      - name: üßæ Compute tag
        id: tag
        run: |
          TAG="v${{ steps.v.outputs.version }}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "Tag: $TAG"
          git fetch --tags --force
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: üè∑Ô∏è Create and push tag (if missing)
        if: steps.tag.outputs.exists == 'false'
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.tag.outputs.tag }}" -m "Release ${{ steps.tag.outputs.tag }}"
          git push origin "${{ steps.tag.outputs.tag }}"
      - name: üîÄ Checkout the new tag
        run: |
          git fetch --tags --force
          git checkout "${{ steps.tag.outputs.tag }}"
          git rev-parse --short HEAD

      - name: üß© Generate release notes (git-cliff, current tag only)
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --current --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚úÖ Validate changelog
        run: |
          if [ ! -s CHANGELOG.md ]; then
            echo "git-cliff did not produce content (template error or no commits?)."
            exit 1
          fi
          sed -n '1,80p' CHANGELOG.md || true

      - name: üì¶ Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
